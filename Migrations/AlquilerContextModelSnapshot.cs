// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Trabajo_Alquiler.Data;

#nullable disable

namespace Trabajo_Alquiler.Migrations
{
    [DbContext(typeof(AlquilerContext))]
    partial class AlquilerContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Trabajo_Alquiler.Models.Contrato", b =>
                {
                    b.Property<int>("Idcontrato")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Idcontrato"));

                    b.Property<decimal>("Deposito")
                        .HasColumnType("decimal(6,2)");

                    b.Property<DateTime>("Fecha_Fin")
                        .HasColumnType("date");

                    b.Property<DateTime>("Fecha_Inicio")
                        .HasColumnType("date");

                    b.Property<int>("InquilinosId")
                        .HasColumnType("int");

                    b.Property<int>("PropiedadesId")
                        .HasColumnType("int");

                    b.Property<string>("Terminos")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Idcontrato");

                    b.HasIndex("InquilinosId");

                    b.HasIndex("PropiedadesId");

                    b.ToTable("Contratos");
                });

            modelBuilder.Entity("Trabajo_Alquiler.Models.Inquilino", b =>
                {
                    b.Property<int>("Idinquilino")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Idinquilino"));

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PropiedadesId")
                        .HasColumnType("int");

                    b.Property<int>("Telefono")
                        .HasColumnType("int");

                    b.HasKey("Idinquilino");

                    b.HasIndex("PropiedadesId");

                    b.ToTable("Inquilinos");
                });

            modelBuilder.Entity("Trabajo_Alquiler.Models.Pago", b =>
                {
                    b.Property<int>("Idpago")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Idpago"));

                    b.Property<int>("ContratosId")
                        .HasColumnType("int");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Fecha_Pago")
                        .HasColumnType("date");

                    b.Property<decimal>("Monto")
                        .HasColumnType("decimal(6,2)");

                    b.HasKey("Idpago");

                    b.HasIndex("ContratosId");

                    b.ToTable("Pagos");
                });

            modelBuilder.Entity("Trabajo_Alquiler.Models.Propiedad", b =>
                {
                    b.Property<int>("Idpropiedad")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Idpropiedad"));

                    b.Property<string>("Direccion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Disponible")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("No_habitaciones")
                        .HasColumnType("int");

                    b.Property<decimal>("Precio_alquiler")
                        .HasColumnType("decimal(6,2)");

                    b.Property<string>("Tipo_propiedad")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Idpropiedad");

                    b.ToTable("Propiedades");
                });

            modelBuilder.Entity("Trabajo_Alquiler.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Trabajo_Alquiler.Models.Contrato", b =>
                {
                    b.HasOne("Trabajo_Alquiler.Models.Inquilino", "Inquilinos")
                        .WithMany()
                        .HasForeignKey("InquilinosId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Trabajo_Alquiler.Models.Propiedad", "Propiedades")
                        .WithMany()
                        .HasForeignKey("PropiedadesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Inquilinos");

                    b.Navigation("Propiedades");
                });

            modelBuilder.Entity("Trabajo_Alquiler.Models.Inquilino", b =>
                {
                    b.HasOne("Trabajo_Alquiler.Models.Propiedad", "Propiedades")
                        .WithMany()
                        .HasForeignKey("PropiedadesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Propiedades");
                });

            modelBuilder.Entity("Trabajo_Alquiler.Models.Pago", b =>
                {
                    b.HasOne("Trabajo_Alquiler.Models.Contrato", "Contratos")
                        .WithMany()
                        .HasForeignKey("ContratosId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Contratos");
                });
#pragma warning restore 612, 618
        }
    }
}
